@model StoreApp.WebApp.Models.PlaceOrderViewModel

@{
    ViewData["Title"] = "Create";
    var customers = Model.Customers;
    var locations = Model.Locations;
    var products = Model.Products;
    Model.chosenProductAmount = 1;


    TempData.Put("Model", Model);
}

<h1>Create</h1>

<hr/>
<div class="row">
    <div class="col-md-4">
        <form asp-action="Create">

            <div asp-validation-summary="ModelOnly" class="text-danger"></div>

            <div class="form-group">
                <select asp-for="chosenCustomerId" id="CustomerList">
                    <option style="display:none">-- select customer --</option>
                    @foreach (var customer in customers)
                    {
                        if (customer.Id == Model.chosenCustomerId)
                        {
                            @:<option Value=@customer.Id selected> @(customer.FirstName + " " + customer.LastName) </option>
                        }
                        else
                        {
                            @:<option Value=@customer.Id> @(customer.FirstName + " " + customer.LastName) </option>
                        }
                    }
                </select>
            </div>

            <div class="form-group">
                <select asp-for="chosenLocationId" id="LocationList">
                    <option style="display:none">-- select location --</option>
                    @foreach (var location in locations)
                    {
                        if (location.Id == Model.chosenLocationId)
                        {
                            @:<option Value=@location.Id selected> @location.Name </option>
                        }
                        else
                        {
                            @:<option Value=@location.Id> @location.Name </option>
                        }
                    }
                </select>
            </div>

            <div>
                @if (Model.CartItems.Count() == 0)
                {
                    @:<text>Cart is empty</text>
                }
                else
                {
                    @:<text>Cart Items</text>
                    @:<br />
                    @for (int i = 0; i < Model.CartItems.Count(); i++)
                    {
                        @:<text>@Model.CartItems[i].Name - Count: @Model.CartAmounts[i]</text>
                        @:<br />
                    }
                    <br />
                }

            </div>

            <div class="form-group">
                <select id="ProductList" asp-for="chosenProductId">
                    <option style="display:none">-- select product --</option>
                    @foreach (var product in products)
                    {
                        @:<option Value=@product.Id> @product.Name - @string.Format("{0:C2}", product.Price) </option>
                    }
                </select>
                <input asp-for="chosenProductAmount" class="form-control" />
                <span asp-validation-for="chosenProductAmount" class="text-danger"></span>
            </div>

            <div>
                <input type="submit" value="Add Product" asp-action="AddProduct" class="btn btn-primary" />
            </div>
            <br />
            <div class="form-group">
                <input type="submit" value="Place Order" asp-action="Finalize" class="btn btn-primary" />
            </div>
        </form>
    </div>
</div>

<div>
    <a asp-action="Index">Back to List</a>
</div>

@section Scripts {
    @{await Html.RenderPartialAsync("_ValidationScriptsPartial");}
}
